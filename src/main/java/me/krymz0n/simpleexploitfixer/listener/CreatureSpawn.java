package me.krymz0n.simpleexploitfixer.listener;

import me.krymz0n.simpleexploitfixer.Main;
import org.bukkit.entity.Entity;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.entity.CreatureSpawnEvent;

public class CreatureSpawn implements Listener {
    private final Main plugin;

    public CreatureSpawn(Main plugin) {
        this.plugin = plugin;
    }

    @EventHandler
    public void onCreatureSpawn(CreatureSpawnEvent evt) {
        Entity e = evt.getEntity();
        switch (e.getType()) {
            case ZOMBIE: {
                if (plugin.getConfig().getBoolean("Zombie")) {
                    evt.setCancelled(true);
                }
                break;
            }
            case SKELETON: {
                if (plugin.getConfig().getBoolean("Skeleton")) {
                    evt.setCancelled(true);
                }
                break;
            }
            case SPIDER: {
                if (plugin.getConfig().getBoolean("Spider")) {
                    evt.setCancelled(true);
                }
                break;
            }
            case CAVE_SPIDER: {
                if (plugin.getConfig().getBoolean("CaveSpider")) {
                    evt.setCancelled(true);
                }
                break;
            }
            case CREEPER: {
                if (plugin.getConfig().getBoolean("Creeper")) {
                    evt.setCancelled(true);
                }
                break;
            }
            case ENDERMAN: {
                if (plugin.getConfig().getBoolean("Enderman")) {
                    evt.setCancelled(true);
                }
                break;
            }
            case PHANTOM: {
                if (plugin.getConfig().getBoolean("Phantom")) {
                    evt.setCancelled(true);
                }
                break;
            }
            case WITHER: {
                if (plugin.getConfig().getBoolean("Wither")) {
                    evt.setCancelled(true);
                }
                break;
            }
        }
    }
}
