package me.krymz0n.simpleexploitfixer.listener;

import com.comphenix.protocol.PacketType;
import com.comphenix.protocol.ProtocolLibrary;
import com.comphenix.protocol.ProtocolManager;
import com.comphenix.protocol.events.ListenerPriority;
import com.comphenix.protocol.events.PacketAdapter;
import com.comphenix.protocol.events.PacketEvent;
import com.comphenix.protocol.wrappers.BlockPosition;
import com.comphenix.protocol.wrappers.EnumWrappers;
import me.krymz0n.simpleexploitfixer.Main;

public class ProtocolLib {
    public static void protocolLibWrapper(Main plugin) {
        ProtocolManager protocolManager = ProtocolLibrary.getProtocolManager();

        if (plugin.getConfig().getBoolean("PreventNoComCoordinateExploit")) {
            protocolManager.addPacketListener(
                    new PacketAdapter(plugin, ListenerPriority.NORMAL, PacketType.Play.Client.BLOCK_DIG) {
                        @Override
                        public void onPacketReceiving(PacketEvent event) {
                            final EnumWrappers.PlayerDigType t = event.getPacket().getPlayerDigTypes().read(0);
                            if (event.getPacketType() == PacketType.Play.Client.BLOCK_DIG) {
                                if (t.equals(EnumWrappers.PlayerDigType.START_DESTROY_BLOCK) || t.equals(EnumWrappers.PlayerDigType.ABORT_DESTROY_BLOCK) || t.equals(EnumWrappers.PlayerDigType.STOP_DESTROY_BLOCK)) {
                                    final BlockPosition packetLocation = event.getPacket().getBlockPositionModifier().read(0);
                                    if (event.getPlayer().getLocation().distance(packetLocation.toLocation(event.getPlayer().getWorld())) > plugin.getConfig().getInt("NoComMaxDistance")) {
                                        event.setCancelled(true);
                                    }
                                }
                            }
                        }
                    });

            protocolManager.addPacketListener(
                    new PacketAdapter(plugin, ListenerPriority.NORMAL, PacketType.Play.Client.USE_ITEM) {
                        @Override
                        public void onPacketReceiving(PacketEvent event) {
                            if (event.getPacketType() == PacketType.Play.Client.USE_ITEM) {
                                final BlockPosition packetLocation = event.getPacket().getBlockPositionModifier().read(0);
                                if (event.getPlayer().getLocation().distance(packetLocation.toLocation(event.getPlayer().getWorld())) > plugin.getConfig().getInt("NoComMaxDistance")) {
                                    event.setCancelled(true);
                                }
                            }
                        }
                    });
        }
    }
}
